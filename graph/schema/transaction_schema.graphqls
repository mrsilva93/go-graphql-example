
directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

type Transaction {
  id: ID!
  transactionType: TransactionType! @goField(forceResolver: true)
  value: Int!
  date: String!   # ou definir um scalar DateTime
  user: User! @goField(forceResolver: true)
}

input TransactionInput {
  transactionTypeId: ID!
  userId: ID!
  value: Int!
  date: String!   # ou definir um scalar DateTime
}

input TransactionFilter {
  id: ID
  userId: ID
  transactionTypeId: ID
  date: String
  minValue: Int
  maxValue: Int
}

extend type Query {
  transactions(filter: TransactionFilter): [Transaction!]!
}


extend type Mutation {
  createTransaction(input: TransactionInput!): Transaction!
  updateTransaction(id: ID!, input: TransactionInput!): Transaction!
  deleteTransaction(id: ID!): Boolean!
}